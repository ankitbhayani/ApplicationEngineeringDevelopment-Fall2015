/*
 * BrowseDrugs.java
 *
 * Created on October 10, 2008, 9:10 AM
 */
package UserInterface.StoreAdminRole;

import Business.CVSAdministrator;
import Business.Drug;


import Business.Manufacturer;
import Business.ManufacturerDirectory;
import Business.Store;
import UserInterface.ManufacturerRole.ViewMDrugDetailJPanel;
import com.oracle.jrockit.jfr.Producer;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Rushabh
 */
public class BrowseDrugs extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;
    private CVSAdministrator cVSAdministrator;
    private ManufacturerDirectory manufacturerDirectory;
    private boolean isCheckedOut = false;
    private Store store;
    
    /** Creates new form BrowseProducts */
    public BrowseDrugs(JPanel userProcessContainer,CVSAdministrator business, Store store) {
        initComponents();
        this.cVSAdministrator=business;
        this.userProcessContainer= userProcessContainer;
        this.store=store;

        txtName.setText(store.getStoreName());
        populateCVSTable();
        refershStoreTable();
    }
    


    public void populateCVSTable(){
 
        
        int rowCount = CVSDrugCatalogTable.getRowCount();
        DefaultTableModel dtm = (DefaultTableModel)CVSDrugCatalogTable.getModel();
        
        for(int i=rowCount-1; i>=0;i--){
                dtm.removeRow(i);
        }
        
        for(Drug d: cVSAdministrator.getCvsAdminDrugCatalog().getDrugList()){
                Object row[] = new Object[4];
                row[0]=d;
                row[1]=d.getDrugPrice();
                row[2]=d.getCount();
                row[3]=d.getDrugPrice()*d.getCount();
                dtm.addRow(row);
        }

    }
    
    
    public void refreshTableForSearch(String prodName){
   /*     int rowCount = productTable.getRowCount();
        DefaultTableModel dtm = (DefaultTableModel)productTable.getModel();
        for(int i=rowCount-1; i>=0;i--){
            dtm.removeRow(i);
        }
        
        for(Manufacturer supplier: manufacturerDirectory.getManufacturerlist()){
            for(Drug drug: supplier.getProductCatalog().getProductcatalog()){
                if(drug.getProdName().equals(prodName)){
                    Object row[] = new Object[4];
                    row[0]=drug;
                    row[1]=drug.getModelNumber();
                    row[2]=drug.getPrice();
                    row[3]=drug.getAvail();
                    dtm.addRow(row);
                }
            }
        }*/
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        CVSDrugCatalogTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        viewProdjButton2 = new javax.swing.JButton();
        addInStore = new javax.swing.JButton();
        quantitySpinner = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        StoreTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        Logo = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(750, 511));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CVSDrugCatalogTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        CVSDrugCatalogTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Drug Name", "Drug Price", "Availability", "Expiry Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(CVSDrugCatalogTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 590, 100));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Store");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 110, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Store Catalog");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, 110, -1));

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 540, 90, -1));

        viewProdjButton2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        viewProdjButton2.setText("View Drug Detail");
        viewProdjButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewProdjButton2ActionPerformed(evt);
            }
        });
        add(viewProdjButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, 160, -1));

        addInStore.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        addInStore.setText("Add in Store");
        addInStore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addInStoreActionPerformed(evt);
            }
        });
        add(addInStore, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 340, -1, -1));

        quantitySpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        add(quantitySpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 340, 40, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Quantity:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 340, -1, -1));

        StoreTable.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        StoreTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Item Name", "Price", "Stock", "IsBelowThreshold"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(StoreTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 410, 580, 110));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("CVS Master Drug Catalog");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 210, -1));

        txtName.setEditable(false);
        txtName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, new java.awt.Color(102, 102, 102), null, null));
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 150, -1));

        Logo.setIcon(new javax.swing.ImageIcon("C:\\Users\\Ankit Bhayani\\Desktop\\logo.gif")); // NOI18N
        add(Logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, 540, 90));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        /*if(order.getOrderItems().size()>0){
            ArrayList<OrderItem> orderItems  = order.getOrderItems();
            for(OrderItem orderItem:orderItems){
                Product p = orderItem.getProduct();
                p.setAvail(orderItem.getQuantity()+p.getAvail());
            }
            
            order.getOrderItems().removeAll(orderItems);
        }*/
            
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_btnBackActionPerformed

    private void viewProdjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewProdjButton2ActionPerformed
        
        int selectedRow = CVSDrugCatalogTable.getSelectedRow();
              
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a row!");
            return;
        }
        
        Drug drug = (Drug)CVSDrugCatalogTable.getValueAt(selectedRow, 0);
        ViewDrugDetailJPanel voidjp = new ViewDrugDetailJPanel(userProcessContainer,drug);
        userProcessContainer.add("ViewDrugDetailJPanel",voidjp);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
        
    }//GEN-LAST:event_viewProdjButton2ActionPerformed

    private void addInStoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addInStoreActionPerformed
      
        
        int selectedRow = CVSDrugCatalogTable.getSelectedRow();
        Drug selectedDrug;
        Manufacturer selectedManufacturer;
        int salesPrice=0;

        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a row!");
            return;
        }
        else{
            selectedDrug=(Drug)CVSDrugCatalogTable.getValueAt(selectedRow, 0);
            selectedManufacturer=cVSAdministrator.manufacturerDirectory.searchManufacturer(selectedDrug.getManufacturerName());
        }

        int fetchQty = (Integer)quantitySpinner.getValue();
        if(fetchQty<=0){
            JOptionPane.showMessageDialog(null, "Quantity cant be negative or 0");
        }
        else if (fetchQty>selectedDrug.getCount()){
            JOptionPane.showMessageDialog(null, "No sufficient drugs availale this time");
        }
        else if(fetchQty<=selectedDrug.getCount()){
            boolean alreadyPresent= false;
            //JOptionPane.showMessageDialog(null, store.storeDrugCatalog.getDrugList().size());
            
            for(Drug d: store.storeDrugCatalog.drugList){
                if(d.getDrugName().equals(selectedDrug.getDrugName())){
                    //JOptionPane.showMessageDialog(null, "Same Drug adding again");
                    alreadyPresent= true;
                    if(d.isBelowThreshold()){
                        int oldCount = selectedDrug.getCount();
                        int newCount = oldCount - fetchQty;
                        selectedDrug.setCount(newCount);
                        d.setStock(fetchQty+d.getStock());

                        if(d.getStock()>10)
                        d.setBelowThreshold(false);

                        populateCVSTable();
                        refershStoreTable();
                        break;
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Already in sufficient stock");
                    }
                }
            }

            if(!alreadyPresent){
                
                //JOptionPane.showMessageDialog(null, "new Drug");
                int oldCount = selectedDrug.getCount();
                int newCount = oldCount - fetchQty;
                selectedDrug.setCount(newCount);
                selectedDrug.setStock(fetchQty);
          
                Drug drug = store.storeDrugCatalog.addDrug();
                drug.setDrugName(selectedDrug.getDrugName());
                drug.setDrugPrice(selectedDrug.getDrugPrice());
                drug.setStock(selectedDrug.getStock());
                
                if(drug.getStock()<10)
                    drug.setBelowThreshold(true);
                //JOptionPane.showMessageDialog(null, store.storeDrugCatalog.getDrugList().size());
                populateCVSTable();
                refershStoreTable();
            }

        }
        else{
            JOptionPane.showMessageDialog(null, "Quantity requested is not available");
        }

          
    }//GEN-LAST:event_addInStoreActionPerformed

    private void refershStoreTable(){
        
        int rowCount = StoreTable.getRowCount();
        DefaultTableModel dtm = (DefaultTableModel)StoreTable.getModel();
        
        for(int i=rowCount-1; i>=0;i--){
                dtm.removeRow(i);
        }
        
        //JOptionPane.showMessageDialog(null, store.getStoreName());
        
        for(Drug d: store.storeDrugCatalog.getDrugList()){
                Object row[] = new Object[4];
                row[0]=d;
                row[1]=d.getDrugPrice();
                row[2]=d.getStock();
                row[3]=d.isBelowThreshold();
                dtm.addRow(row);
        }

        
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CVSDrugCatalogTable;
    private javax.swing.JLabel Logo;
    private javax.swing.JTable StoreTable;
    private javax.swing.JButton addInStore;
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner quantitySpinner;
    private javax.swing.JTextField txtName;
    private javax.swing.JButton viewProdjButton2;
    // End of variables declaration//GEN-END:variables
}
