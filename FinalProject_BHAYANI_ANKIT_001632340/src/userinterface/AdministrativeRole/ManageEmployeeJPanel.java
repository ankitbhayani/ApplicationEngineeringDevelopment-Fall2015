/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdministrativeRole;

import Business.Employee.Employee;
import Business.Employee.Employee.EmployeeType;
import Business.Enterprise.Enterprise;
import Business.IndividualUser.Doctor;
import Business.IndividualUser.Manufacturer;
import Business.IndividualUser.Patient;
import Business.IndividualUser.PharmaManager;
import Business.IndividualUser.StorePharmacist;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.Utils.MyStringVerifier;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class ManageEmployeeJPanel extends javax.swing.JPanel {

    private OrganizationDirectory organizationDir;
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    /**
     * Creates new form ManageOrganizationJPanel
     */
    public ManageEmployeeJPanel(JPanel userProcessContainer,OrganizationDirectory organizationDir,Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organizationDir = organizationDir;
        this.enterprise=enterprise;
        populateOrganizationComboBox();
        populateOrganizationEmpComboBox();
        txtEmployeeCity.setText(enterprise.getEnterpriseCity());
        MyStringVerifier myStringVerifier = new MyStringVerifier();
        txtEmployeeName.setInputVerifier(myStringVerifier);
    }
    
    public void populateOrganizationComboBox(){
        organizationJComboBox.removeAllItems();
        
        //organizationJComboBox.addItem("All Organization");
        for (Organization organization : organizationDir.getOrganizationList()){
            organizationJComboBox.addItem(organization);
        }
    }
    
    public void populateOrganizationEmpComboBox(){
        organizationEmpJComboBox.removeAllItems();
                
        for (Organization organization : organizationDir.getOrganizationList()){
            //JOptionPane.showMessageDialog(null, organization.getName());
            organizationEmpJComboBox.addItem(organization);
        }
        
        
    }

    private void populateTable(Organization organization, boolean flag){
        DefaultTableModel model = (DefaultTableModel) organizationJTable.getModel();
        model.setRowCount(0);
        
        if(flag){
            for (Employee employee : organization.getEmployeeDirectory().getEmployeeList()){
                Object[] row = new Object[2];
                if(employee instanceof Doctor)
                    row[0] = ((Doctor)employee).getEmployeeid();
                else
                    row[0] = employee.getId();
                //row[1] = employee.getEnterpriseName();
                row[1] = employee.getName();
                model.addRow(row);
            }
        }
        else{
            
            for(Organization or: organizationDir.getOrganizationList()){
                for (Employee employee : or.getEmployeeDirectory().getEmployeeList()){
                    Object[] row = new Object[2];
                    row[0] = employee.getId();
                    //row[1] = employee.getEnterpriseName();
                    row[1] = employee.getName();
                    model.addRow(row);
                }
            }
            
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        organizationJTable = new javax.swing.JTable();
        addJButton = new javax.swing.JButton();
        organizationJComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtEmployeeName = new javax.swing.JTextField();
        organizationEmpJComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtEmployeeCity = new javax.swing.JTextField();
        lblStatus = new javax.swing.JLabel();

        organizationJTable.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        organizationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(organizationJTable);
        if (organizationJTable.getColumnModel().getColumnCount() > 0) {
            organizationJTable.getColumnModel().getColumn(0).setResizable(false);
            organizationJTable.getColumnModel().getColumn(1).setResizable(false);
        }

        addJButton.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        addJButton.setText("Create Employee");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });

        organizationJComboBox.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        organizationJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        organizationJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationJComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel1.setText("Organization");

        backJButton.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel2.setText("Name");

        txtEmployeeName.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txtEmployeeName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEmployeeNameKeyPressed(evt);
            }
        });

        organizationEmpJComboBox.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        organizationEmpJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel3.setText("Organization");

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel4.setText("City");

        txtEmployeeCity.setEditable(false);
        txtEmployeeCity.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        lblStatus.setFont(new java.awt.Font("Calibri", 3, 12)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(0, 0, 204));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(backJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(lblStatus))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(organizationEmpJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmployeeName, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmployeeCity, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addJButton))
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(organizationJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(organizationJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(organizationEmpJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtEmployeeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtEmployeeCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addComponent(addJButton)
                        .addGap(23, 23, 23))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(72, 72, 72)
                .addComponent(lblStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addComponent(backJButton)
                .addGap(38, 38, 38))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed

        
        if(txtEmployeeName.getText().trim().length()==0 || txtEmployeeCity.getText().trim().length()==0)
        {
            JOptionPane.showMessageDialog(this, "Please enter some values.","Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        
        Organization organization = (Organization) organizationEmpJComboBox.getSelectedItem();
        
        String name = txtEmployeeName.getText();
        String city = txtEmployeeCity.getText();
        
        if(organization.getName().contains("Patient")){
            //Employee e= organization.getEmployeeDirectory().createEmployee(EmployeeType.Patient);
            Patient e = new Patient();
            e.setCity(city);
            e.setName(name);
            e.setEnterpriseName(enterprise.getName());
            e.setEnterpriseMapLocation(enterprise.getEnterpriseMap());
            organization.getEmployeeDirectory().getEmployeeList().add(e);
        }
        else if(organization.getName().contains("Doctor")){
            //Employee e= organization.getEmployeeDirectory().createEmployee(EmployeeType.Patient);
            Doctor e = new Doctor();
            e.setCity(city);
            e.setName(name);
            e.setEnterpriseName(enterprise.getName());
            e.setEnterpriseMapLocation(enterprise.getEnterpriseMap());
            organization.getEmployeeDirectory().getEmployeeList().add(e);
            organization.getEmployeeDirectory().setLastEmployeeID(WHEN_FOCUSED);
        } 
        else if(organization.getName().contains("Nurse")){
            Employee e= organization.getEmployeeDirectory().createEmployee(EmployeeType.Nurse);
            e.setCity(city);
            e.setName(name);
        } 
        else if(organization.getName().contains("Receptionist")){
            Employee e= organization.getEmployeeDirectory().createEmployee(EmployeeType.Receptionist);
            e.setCity(city);
            e.setName(name);
        } 
        else if(organization.getName().contains("Lab")){
            Employee e= organization.getEmployeeDirectory().createEmployee(EmployeeType.Lab);
            e.setCity(city);
            e.setName(name);
        }
         
        else if(organization.getName().contains("DrugInspector")){
            Employee e= organization.getEmployeeDirectory().createEmployee(EmployeeType.DrugInspector);
            e.setCity(city);
            e.setName(name);
        } 
        else if(organization.getName().contains("DrugController")){
            Employee e= organization.getEmployeeDirectory().createEmployee(EmployeeType.DrugController);
            e.setCity(city);
            e.setName(name);
        }
        else if(organization.getName().contains("PharmaManager")){
            //Employee e= organization.getEmployeeDirectory().createEmployee(EmployeeType.PharmaManager);
            PharmaManager e = new PharmaManager();
            e.setCity(city);
            e.setName(name);
            e.setEnterpriseName(enterprise.getName());
            e.setEnterpriseMapLocation(enterprise.getEnterpriseMap());
            organization.getEmployeeDirectory().getEmployeeList().add(e);
        }         
        else if(organization.getName().contains("StorePharmacist")){
            //Employee e= organization.getEmployeeDirectory().createEmployee(EmployeeType.PharmaManager);
            StorePharmacist e = new StorePharmacist();
            e.setCity(city);
            e.setName(name);
            e.setEnterpriseName(enterprise.getName());
            e.setEnterpriseMapLocation(enterprise.getEnterpriseMap());
            organization.getEmployeeDirectory().getEmployeeList().add(e);
        }
        else if(organization.getName().contains("Manufacturer")){
            //Employee e= organization.getEmployeeDirectory().createEmployee(EmployeeType.Manufacturer);
            Manufacturer e = new Manufacturer();
            e.setCity(city);
            e.setName(name);
            e.setEnterpriseName(enterprise.getName());
            e.setEnterpriseMapLocation(enterprise.getEnterpriseMap());
            organization.getEmployeeDirectory().getEmployeeList().add(e);
        }
        
        populateTable(organization,false);
        txtEmployeeName.setText("");
        lblStatus.setText("Successfully Created!");
    }//GEN-LAST:event_addJButtonActionPerformed

    
 
    
    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void organizationJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationJComboBoxActionPerformed
        Organization organization = (Organization) organizationJComboBox.getSelectedItem();
        
        if (organization != null){
            populateTable(organization,true);
        }
    }//GEN-LAST:event_organizationJComboBoxActionPerformed

    private void txtEmployeeNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmployeeNameKeyPressed
        lblStatus.setText("");
    }//GEN-LAST:event_txtEmployeeNameKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JComboBox organizationEmpJComboBox;
    private javax.swing.JComboBox organizationJComboBox;
    private javax.swing.JTable organizationJTable;
    private javax.swing.JTextField txtEmployeeCity;
    private javax.swing.JTextField txtEmployeeName;
    // End of variables declaration//GEN-END:variables
}
