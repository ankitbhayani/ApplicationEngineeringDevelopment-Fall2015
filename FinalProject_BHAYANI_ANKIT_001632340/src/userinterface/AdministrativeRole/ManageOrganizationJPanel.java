/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdministrativeRole;

import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.Organization.Type;
import Business.Organization.OrganizationDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class ManageOrganizationJPanel extends javax.swing.JPanel {

    private OrganizationDirectory directory;
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    
    /**
     * Creates new form ManageOrganizationJPanel
     */
    public ManageOrganizationJPanel(JPanel userProcessContainer,OrganizationDirectory directory, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.directory = directory;
        this.enterprise = enterprise;
        populateTable();
        populateCombo();
    }
    
    private void populateCombo(){
        organizationJComboBox.removeAllItems();
        //JOptionPane.showMessageDialog(null, enterprise.getEnterpriseType());
        if(enterprise.getEnterpriseType().equals(Enterprise.EnterpriseType.Hospital)){
            for (Type type : Organization.Type.values()){
                if (!(type.getValue().equals(Type.Admin.getValue()) ||
                     type.getValue().equals(Type.PharmaManager.getValue()) ||
                     type.getValue().equals(Type.StorePharmacist.getValue()) ||   
                     type.getValue().equals(Type.Manufacturer.getValue()) || 
                     type.getValue().equals(Type.DrugController.getValue()))   )
                    organizationJComboBox.addItem(type);
            }
        }
        else if(enterprise.getEnterpriseType().equals(Enterprise.EnterpriseType.Pharmacy)){
            for (Type type : Organization.Type.values()){
                if (type.getValue().equals(Type.PharmaManager.getValue()) || 
                    type.getValue().equals(Type.StorePharmacist.getValue()) )
                    organizationJComboBox.addItem(type);
            }
        }
        else if(enterprise.getEnterpriseType().equals(Enterprise.EnterpriseType.DrugManufacturer)){
            //JOptionPane.showMessageDialog(null, "inside manu");
            for (Type type : Organization.Type.values()){
                if (type.getValue().equals(Type.Manufacturer.getValue()))
                    organizationJComboBox.addItem(type);
            }
        }
        else if(enterprise.getEnterpriseType().equals(Enterprise.EnterpriseType.DrugAdministration)){
            //JOptionPane.showMessageDialog(null, "inside manu");
            for (Type type : Organization.Type.values()){
                if (//type.getValue().equals(Type.DrugInspector.getValue()) || 
                    type.getValue().equals(Type.DrugController.getValue()) )
                    organizationJComboBox.addItem(type);
            }
        }
    }

    private void populateTable(){
        DefaultTableModel model = (DefaultTableModel) organizationJTable.getModel();
        
        model.setRowCount(0);
        
        for (Organization organization : directory.getOrganizationList()){
            Object[] row = new Object[2];
            row[0] = organization.getOrganizationID();
            row[1] = organization;
            
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        organizationJTable = new javax.swing.JTable();
        addJButton = new javax.swing.JButton();
        organizationJComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        btnCreateAll = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        organizationJTable.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        organizationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(organizationJTable);
        if (organizationJTable.getColumnModel().getColumnCount() > 0) {
            organizationJTable.getColumnModel().getColumn(0).setResizable(false);
            organizationJTable.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 640, 290));

        addJButton.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        addJButton.setText("Add Organization");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });
        add(addJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 350, 150, -1));

        organizationJComboBox.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        organizationJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(organizationJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 350, 200, -1));

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel1.setText("Organization Type ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 350, -1, 20));

        backJButton.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 480, -1, -1));

        btnCreateAll.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnCreateAll.setText("Create All");
        btnCreateAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateAllActionPerformed(evt);
            }
        });
        add(btnCreateAll, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 350, 140, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed

        Type type = (Type) organizationJComboBox.getSelectedItem();
        boolean check=true;
        for(Organization o : directory.getOrganizationList()){
            if(o.getName().equalsIgnoreCase(type.getValue())){
                JOptionPane.showMessageDialog(null, "Already existing");
                check=false;
                break;
            }
            
        }
        
        if(check){
                //JOptionPane.showMessageDialog(null, "First Time");
                directory.createOrganization(type);
                populateTable();
            }
        
    }//GEN-LAST:event_addJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void btnCreateAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateAllActionPerformed

        if(directory.getOrganizationList().size()==0){
            //JOptionPane.showMessageDialog(null, "Zero... Go ahead " + organizationJComboBox.getItemCount());
            int len =organizationJComboBox.getItemCount();
            int i=0;
            while(i<len){
                //JOptionPane.showMessageDialog(null, "Go ahead " + organizationJComboBox.getItemAt(i));
                Type type = (Type) organizationJComboBox.getItemAt(i);
                directory.createOrganization(type);
                i++;
            }
            populateTable();
        }
        else{
             JOptionPane.showMessageDialog(null, "One or more organizations already existing");
        }
    }//GEN-LAST:event_btnCreateAllActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnCreateAll;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox organizationJComboBox;
    private javax.swing.JTable organizationJTable;
    // End of variables declaration//GEN-END:variables
}
