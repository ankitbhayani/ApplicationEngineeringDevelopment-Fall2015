/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import Business.Patient;
import Business.PatientDirectory;
import Business.Person;
import Business.PersonDirectory;
import Business.VitalSign;
import java.awt.CardLayout;
import java.sql.Timestamp;
import javax.swing.JOptionPane;
import javax.swing.JPanel;


public class CreatePatientJPanel extends javax.swing.JPanel {

     
    private Patient patient;
    
    private JPanel userProcessContainer;
    private Person person;
    private Patient ptnt;    
    private PatientDirectory patientDirectory;
    private PersonDirectory prd;
    
    public CreatePatientJPanel(JPanel upc, Person p, PatientDirectory pd, PersonDirectory prd) {
       initComponents();
       this.person=p;
       this.userProcessContainer = upc;
       this.patientDirectory = pd;
       this.prd=prd;
        
        txtPatientId.setEditable(false);
        txtPatientId.setText(String.valueOf(p.getID()));
        txtPatientAge.setEditable(false);
        txtPatientAge.setText(String.valueOf(p.getAge()));
        txtHeartRate.setEnabled(false);
        txtSystolicBloodPressure.setEnabled(false);
        txtRespiratoryRate.setEnabled(false);
        txtWeight.setEnabled(false);
        btnCreateVitalSign.setEnabled(false);
    
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCreate = new javax.swing.JLabel();
        lblPatientId = new javax.swing.JLabel();
        lblPrimaryDoctorName = new javax.swing.JLabel();
        txtPatientId = new javax.swing.JTextField();
        txtPrimaryDoctorName = new javax.swing.JTextField();
        lblPreferredPharmacy = new javax.swing.JLabel();
        txtPreferredPharmacy = new javax.swing.JTextField();
        btnCreatePatient = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        lblRespiratoryRate = new javax.swing.JLabel();
        lblHeartRate = new javax.swing.JLabel();
        lblSystolicBloodPressure = new javax.swing.JLabel();
        lblWeight = new javax.swing.JLabel();
        txtSystolicBloodPressure = new javax.swing.JTextField();
        txtRespiratoryRate = new javax.swing.JTextField();
        txtHeartRate = new javax.swing.JTextField();
        txtWeight = new javax.swing.JTextField();
        lblCreate1 = new javax.swing.JLabel();
        lblVitalSignStatus = new javax.swing.JLabel();
        lblPatientStatus = new javax.swing.JLabel();
        btnBackToCreatePerson = new javax.swing.JButton();
        lblPatientAge = new javax.swing.JLabel();
        txtPatientAge = new javax.swing.JTextField();
        btnCreateVitalSign = new javax.swing.JButton();

        lblCreate.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        lblCreate.setText("Patient Personal Details");

        lblPatientId.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lblPatientId.setText("Patient ID");

        lblPrimaryDoctorName.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lblPrimaryDoctorName.setText("Primary Doctor Name");

        txtPatientId.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txtPatientId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientIdActionPerformed(evt);
            }
        });

        txtPrimaryDoctorName.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txtPrimaryDoctorName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrimaryDoctorNameKeyTyped(evt);
            }
        });

        lblPreferredPharmacy.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lblPreferredPharmacy.setText("Preferred Pharmacy");

        txtPreferredPharmacy.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        btnCreatePatient.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnCreatePatient.setText("Register Patient");
        btnCreatePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreatePatientActionPerformed(evt);
            }
        });

        lblRespiratoryRate.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lblRespiratoryRate.setText("Respiratory Rate");

        lblHeartRate.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lblHeartRate.setText("Heart Rate");

        lblSystolicBloodPressure.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lblSystolicBloodPressure.setText("Systolic Blood Pressure");

        lblWeight.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lblWeight.setText("Weight (in Pounds)");

        txtSystolicBloodPressure.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txtSystolicBloodPressure.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSystolicBloodPressureKeyTyped(evt);
            }
        });

        txtRespiratoryRate.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txtRespiratoryRate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRespiratoryRateKeyTyped(evt);
            }
        });

        txtHeartRate.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txtHeartRate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHeartRateKeyTyped(evt);
            }
        });

        txtWeight.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txtWeight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtWeightKeyTyped(evt);
            }
        });

        lblCreate1.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        lblCreate1.setText("Vital Sign Information");

        lblVitalSignStatus.setFont(new java.awt.Font("Calibri", 3, 14)); // NOI18N
        lblVitalSignStatus.setForeground(new java.awt.Color(204, 0, 0));

        lblPatientStatus.setFont(new java.awt.Font("Calibri", 3, 14)); // NOI18N
        lblPatientStatus.setForeground(new java.awt.Color(204, 0, 0));

        btnBackToCreatePerson.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnBackToCreatePerson.setText("<<Back to Create Person");
        btnBackToCreatePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackToCreatePersonActionPerformed(evt);
            }
        });

        lblPatientAge.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lblPatientAge.setText("Patient Age");

        txtPatientAge.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txtPatientAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPatientAgeKeyTyped(evt);
            }
        });

        btnCreateVitalSign.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnCreateVitalSign.setText("Create VitalSign");
        btnCreateVitalSign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateVitalSignActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(240, 240, 240)
                        .addComponent(lblVitalSignStatus))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPatientStatus)
                            .addComponent(lblCreate)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(btnBackToCreatePerson))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblHeartRate)
                                    .addComponent(lblRespiratoryRate))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtHeartRate)
                                    .addComponent(txtRespiratoryRate, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(63, 63, 63)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblWeight)
                                    .addComponent(lblSystolicBloodPressure))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtSystolicBloodPressure)
                                    .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(144, 144, 144)
                                .addComponent(lblCreate1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPreferredPharmacy)
                                    .addComponent(lblPatientId))
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPreferredPharmacy)
                                    .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblPrimaryDoctorName)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtPrimaryDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblPatientAge)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(btnCreatePatient))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addComponent(btnCreateVitalSign)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCreate)
                .addGap(18, 18, 18)
                .addComponent(lblPatientStatus)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientId)
                    .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPatientAge)
                    .addComponent(txtPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPreferredPharmacy)
                    .addComponent(txtPreferredPharmacy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPrimaryDoctorName)
                    .addComponent(txtPrimaryDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnCreatePatient)
                .addGap(26, 26, 26)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCreate1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRespiratoryRate)
                    .addComponent(txtRespiratoryRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblWeight)
                    .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHeartRate)
                    .addComponent(txtHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSystolicBloodPressure)
                    .addComponent(txtSystolicBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnCreateVitalSign)
                .addGap(37, 37, 37)
                .addComponent(btnBackToCreatePerson)
                .addGap(53, 53, 53)
                .addComponent(lblVitalSignStatus)
                .addContainerGap(27, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreatePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreatePatientActionPerformed
        // TODO add your handling code here:
        
        lblPatientStatus.setText("");
        
        if(!(txtPatientId.getText().isEmpty() || txtPatientId.getText().contains(" ") ||
             txtPrimaryDoctorName.getText().isEmpty() || 
             txtPreferredPharmacy.getText().isEmpty())){
            
            Patient patient = patientDirectory.addPatient();
            ptnt=patient;
            person.setCheckPatient(true);
            
            //JOptionPane.showMessageDialog(null, person.getID(),"Before PatienID",JOptionPane.INFORMATION_MESSAGE);
            patient.setPatientId(person.getID());
            //patient.setPatientId(txtPatientId.getText());
            patient.setPrimaryDocName(txtPrimaryDoctorName.getText());
            patient.setPreferredPharmacy(txtPreferredPharmacy.getText());

            //JOptionPane.showMessageDialog(null, "Patient Details logged into the system!");
            lblPatientStatus.setText("Patient Details logged into the system!");
            //lblVitalSignStatus.setText("Patient Details logged into the system!");

            
            txtPatientId.setEditable(false);
            txtPrimaryDoctorName.setEditable(false);
            txtPreferredPharmacy.setEditable(false);
            btnCreatePatient.setEnabled(false);


            txtHeartRate.setEnabled(true);
            txtSystolicBloodPressure.setEnabled(true);
            txtRespiratoryRate.setEnabled(true);
            txtWeight.setEnabled(true);
            btnCreateVitalSign.setEnabled(true);

            
            //------->Vital Sign Code
            
            }
        else{
            //JOptionPane.showMessageDialog(null, "Spaces or Null");
            lblPatientStatus.setText("Spaces or Null in the one of the Input fields!");
        }
        
    }//GEN-LAST:event_btnCreatePatientActionPerformed

    private void txtPrimaryDoctorNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrimaryDoctorNameKeyTyped
        numberCheck(evt);
    }//GEN-LAST:event_txtPrimaryDoctorNameKeyTyped

    private void txtRespiratoryRateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRespiratoryRateKeyTyped
        characterCheck(evt);
    }//GEN-LAST:event_txtRespiratoryRateKeyTyped

    private void txtWeightKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWeightKeyTyped
        characterCheck(evt);
    }//GEN-LAST:event_txtWeightKeyTyped

    private void txtHeartRateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHeartRateKeyTyped
        characterCheck(evt);
    }//GEN-LAST:event_txtHeartRateKeyTyped

    private void txtSystolicBloodPressureKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSystolicBloodPressureKeyTyped
        characterCheck(evt);
    }//GEN-LAST:event_txtSystolicBloodPressureKeyTyped

    private void txtPatientIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientIdActionPerformed
       
    }//GEN-LAST:event_txtPatientIdActionPerformed

    private void btnBackToCreatePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackToCreatePersonActionPerformed
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout)userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackToCreatePersonActionPerformed

    private void txtPatientAgeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPatientAgeKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientAgeKeyTyped

    private void btnCreateVitalSignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateVitalSignActionPerformed
               if(!(txtRespiratoryRate.getText().isEmpty() || txtHeartRate.getText().isEmpty() ||
              txtSystolicBloodPressure.getText().isEmpty() || txtWeight.getText().isEmpty())){
           
                int age = person.getAge();
                String tStamp = String.valueOf(new Timestamp(System.currentTimeMillis()));
                float respiRate = Float.valueOf(txtRespiratoryRate.getText());
                float hrtRate = Float.valueOf(txtHeartRate.getText());
                float sysBP = Float.valueOf(txtSystolicBloodPressure.getText());
                float wt = Float.valueOf(txtWeight.getText());


                VitalSign vitalSign = ptnt.vitalSignHistory.addVitalSign(respiRate,hrtRate,sysBP,wt);

                if(age>=1 && age<=3){
                    if((respiRate>=20 && respiRate<=30) && (hrtRate>=80 && hrtRate<=130) &&
                       (sysBP>=80 && sysBP<=110) && (wt>=22 && wt<=31)){
                      //  JOptionPane.showMessageDialog(null, "Inside Toddler");
                        vitalSign.setState("NORMAL");
                    }
                    else {vitalSign.setState("ABNORMAL");}
                }
                else if(age>=4 && age<=5){
                    if((respiRate>=20 && respiRate<=30) && (hrtRate>=80 && hrtRate<=120) &&
                       (sysBP>=80 && sysBP<=110) && (wt>=31 && wt<=40)){
                      //  JOptionPane.showMessageDialog(null, "Inside Preschooler");
                        vitalSign.setState("NORMAL");
                    }
                    else {vitalSign.setState("ABNORMAL");}
                }
                else if(age>=6 && age<=12){
                    if((respiRate>=20 && respiRate<=30) && (hrtRate>=70 && hrtRate<=110) &&
                       (sysBP>=80 && sysBP<=120) && (wt>=41 && wt<=92)){
                       // JOptionPane.showMessageDialog(null, "Inside School Age");
                        vitalSign.setState("NORMAL");
                    }
                    else {vitalSign.setState("ABNORMAL");}
                }
                else if(age>=13){
                    if((respiRate>=12 && respiRate<=20) && (hrtRate>=55 && hrtRate<=105) &&
                       (sysBP>=110 && sysBP<=120) && (wt>=110)){
                       // JOptionPane.showMessageDialog(null, "Inside Adolescent");
                        vitalSign.setState("NORMAL");
                    }
                    else {vitalSign.setState("ABNORMAL");}
                }

                vitalSign.setRespiratoryRate(respiRate);
                vitalSign.setHeartRate(hrtRate);
                vitalSign.setSystolicBloodPressure(sysBP);
                vitalSign.setWeight(wt);
                vitalSign.setTimestamp(tStamp);

                int dialogButton= JOptionPane.YES_NO_OPTION;
                int dialogResult= JOptionPane.showConfirmDialog(null, "VitalSign Created Successfully! Do you want to create more?", "Question", dialogButton);

                if (dialogResult==JOptionPane.YES_OPTION){resetFields();}
                else {
                    txtHeartRate.setEnabled(false);
                    txtSystolicBloodPressure.setEnabled(false);
                    txtRespiratoryRate.setEnabled(false);
                    txtWeight.setEnabled(false);


                    lblPatientStatus.setText("Please goto the View section to see the details!");
                    
                    
                    ManagePersonWorkAreaJPanel managePersonWorkAreaJPanel = new ManagePersonWorkAreaJPanel(userProcessContainer,prd,patientDirectory);
                    userProcessContainer.add("ManagePersonWorkAreaJPanel",managePersonWorkAreaJPanel);
                    CardLayout cardLayout = (CardLayout)userProcessContainer.getLayout();
                    cardLayout.next(userProcessContainer);
                }          
            }
            else{ lblPatientStatus.setText("Spaces or Null in the one of the Input fields!");}
  
    }//GEN-LAST:event_btnCreateVitalSignActionPerformed


    public void resetFields(){
        txtHeartRate.setText("");
        txtSystolicBloodPressure.setText("");
        txtRespiratoryRate.setText("");
        txtWeight.setText("");
    }
    
    
    public void numberCheck(java.awt.event.KeyEvent e){
         char ch = e.getKeyChar();
            if (Character.isDigit(ch) && ch!=8 && ch!=46){
                lblPatientStatus.setText("Please enter characters only!");
                e.consume();
            }
            else
                lblPatientStatus.setText("");
                
        
    }
    
    public void characterCheck(java.awt.event.KeyEvent e){
         char ch = e.getKeyChar();
            if (!Character.isDigit(ch) && ch!=8 && ch!=46){
                lblPatientStatus.setText("Please enter Numbers only!");
                e.consume();
            }
            else{
                lblPatientStatus.setText("");
                //lblVitalSignStatus.setText("");
            }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackToCreatePerson;
    private javax.swing.JButton btnCreatePatient;
    private javax.swing.JButton btnCreateVitalSign;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblCreate;
    private javax.swing.JLabel lblCreate1;
    private javax.swing.JLabel lblHeartRate;
    private javax.swing.JLabel lblPatientAge;
    private javax.swing.JLabel lblPatientId;
    private javax.swing.JLabel lblPatientStatus;
    private javax.swing.JLabel lblPreferredPharmacy;
    private javax.swing.JLabel lblPrimaryDoctorName;
    private javax.swing.JLabel lblRespiratoryRate;
    private javax.swing.JLabel lblSystolicBloodPressure;
    private javax.swing.JLabel lblVitalSignStatus;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JTextField txtHeartRate;
    private javax.swing.JTextField txtPatientAge;
    private javax.swing.JTextField txtPatientId;
    private javax.swing.JTextField txtPreferredPharmacy;
    private javax.swing.JTextField txtPrimaryDoctorName;
    private javax.swing.JTextField txtRespiratoryRate;
    private javax.swing.JTextField txtSystolicBloodPressure;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables
}
